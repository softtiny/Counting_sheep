name: Emulator Test
env:
  # The name of the main module repository
  main_project_module: app
  ANDROID_EMULATOR_WAIT_TIME_BEFORE_KILL: 200
on:
  workflow_dispatch:
  # push:
  #   branches: [ main, master ]

jobs:
    android-tests:
        name: Tests on Android
        runs-on: macos-13
        timeout-minutes: 60
    
        strategy:
          fail-fast: false
          matrix:
            api-level: [ 29 ]
    
        steps:
    
          - name: Checkout Git repository
            uses: actions/checkout@v4
    
          - name: Restore local Maven repository
            uses: actions/cache@v4
            with:
              path: ~/.m2/repository
              key: tinylog3-android-${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
              restore-keys: |
                tinylog3-android-${{ runner.os }}-maven-
    
          - name: Restore Gradle caches and wrapper
            uses: actions/cache@v4
            with:
              path: |
                ~/.gradle/caches
                ~/.gradle/wrapper
              key: tinylog3-android-${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
              restore-keys: |
                tinylog3-android-${{ runner.os }}-gradle-
    
          - name: Restore Android virtual device
            id: avd-cache
            uses: actions/cache@v4
            with:
              path: |
                ~/.android/avd/*
                ~/.android/adb*
              key: tinylog3-${{ runner.os }}-avd${{ matrix.api-level }}
    
          - name: Download and install JDK 17
            uses: actions/setup-java@v4
            with:
              distribution: zulu
              java-version: 17
    
    
          - name: Set up Android virtual device if not cached
            uses: reactivecircus/android-emulator-runner@v2
            if: steps.avd-cache.outputs.cache-hit != 'true'
            with:
              api-level: ${{ matrix.api-level }}
              arch: x86_64
              target: ${{ matrix.api-level >= 30 && 'google_apis' || 'default' }}
              force-avd-creation: false
              emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
              disable-animations: false
              script: echo "Generated AVD snapshot for caching."
          - name: Decode keystore and create jks and properties file for signing the app
            run: |
              echo "$PLAY_STORE_UPLOAD_KEY" | base64 --decode > app/keystore.jks
              echo "storeFile=keystore.jks" >> key.properties
              echo "keyAlias=$KEYSTORE_KEY_ALIAS" >> key.properties
              echo "storePassword=$KEYSTORE_STORE_PASSWORD" >> key.properties
              echo "keyPassword=$KEYSTORE_KEY_PASSWORD" >> key.properties
            env:
              PLAY_STORE_UPLOAD_KEY: ${{ secrets.JKSFILE }}
              KEYSTORE_KEY_ALIAS: ${{ secrets.JKS_ALIAS }}
              KEYSTORE_KEY_PASSWORD: ${{ secrets.JKS_PASS }}
              KEYSTORE_STORE_PASSWORD: ${{ secrets.JKS_PASS }}
            # Create APK Release
          - name: Build apk release project (APK)
            run: |
              curl -L https://github.com/softtiny/Counting_sheep/releases/latest/download/update-changelog.json -o old-update.json
              python build.py
              cat update.json
          - name: Run instrumented tests on Android virtual device
            uses: reactivecircus/android-emulator-runner@v2
            with:
              api-level: 29
              script: |
                chmod +x ./gradlew
                adb logcat -c 
                #./gradlew connectedCheck --info
                ./gradlew connectedAndroidTest --info & 
                adb logcat *:V -v time > logcat.txt  
                wait
                #./gradlew assembleAndroidTest
          - name: Upload APK Release
            uses: actions/upload-artifact@v4
            with:
              name: log
              path: ./logcat.txt
                