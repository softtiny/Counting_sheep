name: Counting Sheep
env:
  # The name of the main module repository
  main_project_module: app
on:
  workflow_dispatch:
  push:
    branches: [ main, master ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: checkout
        id: check
        uses: actions/checkout@v3
      # Set Current Date As Env Variable
      - name: Set current date as env variable
        run: echo "date_today=$(date +'%Y-%m-%d')" >> $GITHUB_ENV
      # Set Repository Name As Env Variable
      - name: Set repository name as env variable
        run: echo "repository_name=$(echo '${{ github.repository }}' | awk -F '/' '{print $2}')" >> $GITHUB_ENV
      - name: Set Up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu' # See 'Supported distributions' for available options
          java-version: '17'
          cache: 'gradle'
      - name: Change wrapper permissions
        run: chmod +x ./gradlew
      - name: Decode keystore and create jks and properties file for signing the app
        run: |
          echo "$PLAY_STORE_UPLOAD_KEY" | base64 --decode > app/keystore.jks
          echo "storeFile=keystore.jks" >> key.properties
          echo "keyAlias=$KEYSTORE_KEY_ALIAS" >> key.properties
          echo "storePassword=$KEYSTORE_STORE_PASSWORD" >> key.properties
          echo "keyPassword=$KEYSTORE_KEY_PASSWORD" >> key.properties
        env:
          PLAY_STORE_UPLOAD_KEY: ${{ secrets.JKSFILE }}
          KEYSTORE_KEY_ALIAS: ${{ secrets.JKS_ALIAS }}
          KEYSTORE_KEY_PASSWORD: ${{ secrets.JKS_PASS }}
          KEYSTORE_STORE_PASSWORD: ${{ secrets.JKS_PASS }}
      # Create APK Release
      - name: Build apk release project (APK)
        run: |
          curl -L https://github.com/softtiny/Counting_sheep/releases/latest/download/update-changelog.json -o old-update.json
          python build.py
          cat update.json
          ./gradlew assemble --warning-mode=all
      - name: Make Release Data
        run: |
          info=`python -c 'import json;update=open("./update.json");data=json.load(update);update.close();print(data["latestVersion"]+".apk")'`
          cp ${{ env.main_project_module }}/build/outputs/apk/release/app-release.apk $info
          cp update.json update-changelog.json
          echo "release_apkname=$info" >> $GITHUB_ENV
      - name: Upload APK Release
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.date_today }}APK(s) release generated
          path: ${{ env.main_project_module }}/build/outputs/apk/release/
      - name: Release EVERY onE
        uses: softprops/action-gh-release@v2
        with:
          make_latest: true
          tag_name: v1.0.x
          files: |
            ${{ env.release_apkname }}
            update-changelog.json